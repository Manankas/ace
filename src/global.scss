/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "~@ionic/angular/css/core.css";
@import "material-icons/iconfont/material-icons.css";

/* Basic CSS for apps built with Ionic */
@import "~@ionic/angular/css/normalize.css";
@import "~@ionic/angular/css/structure.css";
@import "~@ionic/angular/css/typography.css";
@import "~@ionic/angular/css/display.css";

/* Optional CSS utils that can be commented out */
@import "~@ionic/angular/css/padding.css";
@import "~@ionic/angular/css/float-elements.css";
@import "~@ionic/angular/css/text-alignment.css";
@import "~@ionic/angular/css/text-transformation.css";
@import "~@ionic/angular/css/flex-utils.css";

/* Quilljs */
@import "~quill/dist/quill.core.css";
@import "~quill/dist/quill.bubble.css";
@import "~quill/dist/quill.snow.css";

ion-icon {
  font-size: 24px;
}

ion-button {
  text-transform: none;
}

.no-maring {
  margin: 0 !important;
}

.no-padding {
  padding: 0 !important;
}

.full-width {
  width: 100%;
}

.text-bold {
  font-weight: 900;
}

.flex {
  display: flex;
}

.row {
  display: flex;
  flex-direction: row;
}

.row-reverse {
  display: flex;
  flex-direction: row-reverse;
}

.column {
  display: flex;
  flex-direction: column;
}

.column-reverse {
  display: flex;
  flex-direction: column-reverse;
}

.justify-center {
  justify-content: center;
}

.items-center {
  align-items: center;
}

.bg-primary {
  background: var(--ion-color-primary);
}
.bg-warning {
  background: var(--ion-color-warning);
}
.bg-transparent {
  --background: transparent;
}

.bottom-sheet {
  background: transparent;
  box-shadow: none;
  padding: 0 !important;
  border-radius: 10% 10% 0 0;
}

.bg-dark-transparent {
  --background: #0000002e;
}

.bg-blur {
  backdrop-filter: blur(1px);
}

.list-header-avatar {
  background: #e8e8e8;
  height: 40px;
  width: 40px;
  margin-right: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.cards-global-container {
  width: 100%;
  display: flex;
  justify-content: center;
}

.cards-container {
  width: 100%;
  max-width: 600px;
  min-height: calc((100vh - 12px) * 30 / 100);
  display: grid;
  padding: 5px;
}

.card-box {
  width: 100%;
  height: 150px;
  contain: content;
  padding: 5px;
}

.card {
  width: 100%;
  height: 80%;
  margin: 0;
  border-radius: 15px !important;
}

.card-box-label {
  width: 100%;
  text-align: center;
  font-weight: 900;
  margin: 2px 0;
}

.mat-radio-outer-circle {
  border-radius: 10% !important;
  padding: 0 !important;
}

.mat-radio-inner-circle {
  border-radius: 10% !important;
  background: url(assets/icon/check.svg);
  background-repeat: no-repeat;
  width: 40px !important;
  height: 40px !important;
  left: -10px !important;
  top: -10px !important;
  background-size: 30px;
  background-position: center;
}
/**full screen modal**/
.modal-fullscreen {
  .modal-wrapper {
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    width: 100%;
    height: 100%;
  }
}
.ios .modal-wrapper {
  .modal-wrapper {
    top: 26px;
  }
}

// message animations
@keyframes leftMsgAnimation {
  from {
    opacity: 0;
    transform: translate(-300px, 100px);
  }
  to {
    opacity: 1;
    transform: translate(0, 0);
  }
}

@keyframes rightMsgAnimation {
  from {
    opacity: 0;
    transform: translate(300px, 100px);
  }
  to {
    opacity: 1;
    transform: translate(0, 0);
  }
}

div {
  .left-animation {
    animation: leftMsgAnimation 0.5s linear;
    animation-fill-mode: both;

    @for $i from 1 through 15 {
      &:nth-child(#{$i}) {
        animation-delay: $i * 75ms;
      }
    }
  }

  .right-animation {
    animation: rightMsgAnimation 0.5s linear;
    animation-fill-mode: both;

    @for $i from 1 through 15 {
      &:nth-child(#{$i}) {
        animation-delay: $i * 75ms;
      }
    }
  }
}

.bg-ace,
ion-header,
ion-content,
ion-tab-bar {
  background-image: url(assets/images/texture.jpg);
  --background: url(assets/images/texture.jpg);
  background-attachment: inherit;
}

ion-toolbar {
  --background: transparent;
  --border: none;
}

.bg-transparent {
  --background: transparent;
  background: transparent;
}

.mat-tab-label,
.mat-tab-link {
  font-weight: bold;
  color: black;
}

.mat-tab-group.mat-primary .mat-ink-bar,
.mat-tab-nav-bar.mat-primary .mat-ink-bar {
  background-color: var(--ion-color-secondary);
}

.mat-form-field.mat-focused .mat-form-field-ripple {
  background-color: var(--ion-color-primary);
}

.mat-tab-header {
  box-shadow: 0px 1px 5px #d0d0d0;
}

.mat-step-header .mat-step-icon-selected,
.mat-step-header .mat-step-icon-state-done,
.mat-step-header .mat-step-icon-state-edit,
.mat-input-element {
  background-color: var(--ion-color-secondary);
}

.mat-accent .mat-slider-track-fill,
.mat-accent .mat-slider-thumb,
.mat-accent .mat-slider-thumb-label {
  background-color: var(--ion-color-warning);
}

* {
  --highlight-background: var(--ion-color-primary);
}

ion-toolbar > ion-button > ion-icon,
ion-toolbar > button > mat-icon,
ion-toolbar > ion-icon {
  color: var(--ion-color-secondary);
}

ion-toolbar > ion-title {
  color: var(--ion-color-tertiary-shade);
}
